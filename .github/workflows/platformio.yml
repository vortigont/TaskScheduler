name: PlatformIO

on:
  push:
    branches: [ master, ci ]
    paths:
    - '**.ino'
    - '**.cpp'
    - '**.hpp'
    - '**.h'
    - '**.c'
    - '**.ini'
    - '**.yml'

  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        python-version: [3.7]

    steps:
      - uses: actions/checkout@v2
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Cache PlatformIO
        uses: actions/cache@v2
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install Platformio
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio
          platformio pkg update
      - name: Build run
        run: |
          pwd
          find examples -type f -name '*.ino' -exec sh -c 'mv "$1" "${1%.ino}.cpp"' _ {} \;
          mkdir lib
          mv src ./lib/
          ls
          # mkdir -p ci/test_http
          # cp examples/HTTP/HTTP.ino tests/test_http/main.cpp
          # cp examples/HTTP/HTTPS.ino tests/test_https/main.cpp
          # globally install the esp32FOTA library from local folder, don't update the platformio.ini
          # pio lib install --no-save file://$(realpath ./)
          platformio run
